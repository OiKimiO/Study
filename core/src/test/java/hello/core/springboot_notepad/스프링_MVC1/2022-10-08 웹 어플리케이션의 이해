웹 어플리케이션의 이해
 백엔드 개발자가 개발시 고려해야할 사항
  1. 정적리소스 제공 어떻게 할 것인지?
  2. 동적으로 제공되는 페이지 어떻게 제공할것인지?
  3. HTTP API 어떻게 제공할 것인지?
  
 1. HTML
   - 정적 페이지 요청
   - 동적 페이지 요청 
     1) WAS를 이용해  DB 조회 후 Client에서 HTML을 그린다.
     
 2. HTTP API
   - 다양한 시스템에서 호출 
   - 데이터만 주고받으며, UI화면이 필요하면 클라이언트가 별도 처리
   - 보통 json 형태로 데이터 통신
   - UI 클라이언트 접점
   - 서버 to 서버
   
 3. CSR(Client Side Rendering)
   - HTML 결과를 자바스크립트를 사용해 웹브라우저에서 동적으로 생성해서 적용
   - 주로 동적인 화면에 사용
   - 예) 구글지도, Gmail, 구글 캘린더
   
 4. SSR(Server Side Rendering)
   - 서버에서 최종 HTML을 생성해서 클라이언트에 전달
   - 관련기술 : JSP, 타임리프 -> 백엔드 개발자
   
 백엔드 개발자 입장에서 UI 기술
 1. 백엔드 - 서버 사이드 렌더링 기술 
   - JSP, 타입리프
   - 화면이 정적이고 복잡하지 않을 때 사용 
   - 백엔드 개발자는 서버 사이드 렌더링 기술 학습 필수
 2. 웹 프론트엔드 - 클라이언트 사이드 렌더링 기술 
   - React, Vue.js
   - 복잡하고 동적인 UI사용
   - 웹 프론트엔드 개발자의 전문 분야
 3. 선택과 집중
   - 백엔드 개발자의 웹 프론트엔드 기술 학습은 옵션 
   - 백엔드 개발자는 서버,DB,인프라 등등 수많은 백엔드 기술을 공부해야한다.
   - 웹 프론트엔드도 깊이있게 잘 하려면 숙련에 오랜 시간이 필요하다.
 
최신 기술 - 스프링 웹 기술의 분화
 1. Web Servlet  - Spring MVC
 2. Web Reactive - Spring WebFlux
   1) 특징
     - 비동기 넌 블러킹 처리 
     - 최소 쓰레드로 최대 성능   
       * 쓰레드 컨텍스트 스위칭 비용 효율화
     - 함수형 스타일로 개발 
       * 동시처리 코드 효율화
   2) 그런데 
     - 웹 플럭스는 기술적 난이도 매우 높음
     - 아직은 RDB 지원 부족
       * elastic search에는 사용하기 좋음? 
     - 일반 MVC의 쓰레드 모델도 충분히 빠르다. 
     - 실무에서 아직 많이 사용하지 X
 
 자바 뷰 템플릿 역사
 HTML을 편리하게 생성하는 뷰 기능 
  타임리프 > 프리마커,벨로시티 
  타임리프
  - 스프링 MVC와 강력한 기능 통합 
  
