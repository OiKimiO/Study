다이나믹 프로그래밍
 1. 1로 만들기 
   - D[N] = N을 1로 만드는 최소 연산 횟수 
    * N = N/3 ~> 1
     1) D[3] = 3을 1로 만드는 최소 연산 횟수  
    * N = N/2 ~> 1
     1) D[2] = 2를 1로 만드는 최소 연산 횟수
    * N = N-1 ~> 1
     1) D[1] = 1를 1로 만드는 최소 연산 횟수 
   - 시간복잡도 계산 
    *  함수의 호출 횟수 * 함수의 시간 복잡도
     = 문제의 개수        * 문제 1개 푸는데 필요한 시간복잡도
     
 2. 2*n 타일링 
    - D[N] = 2 * N을 채우는 방법의 수 
     *  2*n 직사각형이 있을 때, 가장 오른쪽에 타일을 놓을 수 있는 방법은 2가지가 있다.
      1) 작은 1단계를 만드는 작업을 어떻게 하느냐가 중요함!!! 
    - 